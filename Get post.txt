■■■■■ GET VS POST ■■■■■■

○ GET 방식
  ex) https://news.naver.com/main/list.nhn?mode=LPOD&mid=sec&sid1=001&sid2=140&oid=001&isYeonhapFlash=Y&aid=0010816248

      가. https://news.naver.com/main/list.nhn? -> 요청 페이지
      나. mode=LPOD&mid=sec&sid1=001&sid2=140&oid=001&isYeonhapFlash=Y&aid=0010816248 -> 전송 데이터

  - GET 방식은 엽서를 보내는 방식과 유사한 전송 / 요청 방식
  - 주소+데이터(모두 노출)
  - 전송할 데이터를 문자열 형태 (Query String)로 URL뒤에 인수를 붙여서 전송하는 방법(방식)이다.
  - URL뒤에 인수로 붙어있는 내용을 누구나 볼 수 있고 이로인해 봉란성이 취약하다고 할 수 있다.
  - 또한 GET방식은 보낼 수 있는 데이터 량에 한계가 있기 때문에(과거) 많은 데이터를 보내는 경우 일정 크기 이상에서는 잘림 현상이 발생한다.
    (길이 제한을 가진다는 의미이다.url 최대 길이 2048 char)
  - 특히나 form태그에서의 GET방식은 서버로 데이터를 전송하는 과정에서 서버 처리가 지연될 경우
    중복해서 요청이 이루어진다는 문제가 발생할 수 있다는 단점을 가지고 있다.
  - 형식 및 구조
    [url주소?속성=데이터&속성=데이터&...]
    [url주소?name=value&tel=value&...]
  - GET방식은 select적인 성격(성향)을 가지고 있다.
    서버에서 데이터를 가지고 와서 보여준다거나 하는 용도로 주로 사용한다.
    서버의 값이나 상태를 바꾸는 용도로는 사용하지 않는다.
    즉, 단순 페이지 요청에 많이 사용된다는 것이다.
  - GET방식의 장점은 여러가지 형태를 통해 간편한 데이터 전송이 가능하다는 것이다.
    POST방식처럼 form태그를 사용하여 전송도 하고, 링크에 직접 걸어 사용해도 되고, 주소창에 직접 입력해도 된다.
    ex)
     <a href ="http://url?키=값&키=값">
     <form action ="http://url?키=값&키=값">
     window.open(href-"http://url?키=값&키=값");
     window.loation.href="http://url?키=값&키=값";
     window.loation.replace("http://url?키=값&키=값");

○ POST 방식

    - 주소만 노출/ 데이터는 숨김
    - <form> 태그에서 method 속성을 "POST"로 설정해서 요청
    - 파일 형태로 전송되기 때문에 url상에서는 내용이 나타나지 않는다.
      이로 인해 GET방식에 비해 보안성이 높다고 할 수 있다.
    - post방식은 http body안에 숨겨져서 전송된다.
    - GET방식처럼 url 뒷부분에 추가해서 보내는 것이 아니라 http body안에 넣어서 보내기 때문에 GET방식에서 발생할 수 있는
      보안성 문제를 어느정도 해결할 수 있다.
    - GET방식에 비해 대용량의 데이터를 전송할 때 사용한다.
    -<form>태그를 이용해 submit 하는 일반적인 형태가 post방식이다.
    - post방식은 서버의 값이나 상태를 바꾸기 위해 주로 사용한다.
      글쓰기를 하게 되면 글의 내요이 데이터베이스에 저장되고 수정을 하면 데이터베이스에 수정된 값이 적용될 수 있도록 처리하는 구성인 것이다.
